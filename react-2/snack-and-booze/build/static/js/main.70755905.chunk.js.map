{"version":3,"sources":["Home.js","Api.js","NavBar.js","FoodMenu.js","FoodItem.js","NewItem.js","App.js","index.js"],"names":["Home","className","BASE_API_URL","SnackOrBoozeApi","axios","get","result","data","newItem","console","log","id","description","serve","recipe","name","foodType","post","res","NavBar","expand","exact","to","navbar","FoodMenu","food","map","f","FoodItem","items","cantFind","useParams","foodItem","find","item","NewItem","history","useHistory","INITIAL_STATE","useState","formData","setFormData","handleChange","e","target","value","onSubmit","preventDefault","addNewItem","toLowerCase","push","htmlFor","type","placeholder","onChange","App","isLoading","setIsLoading","snacks","setSnacks","drinks","useEffect","getSnacks","path","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70755905.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\nfunction Home() {\n  return (\n    <section className=\"col-md-8\">\n      <Card>\n        <CardBody className=\"text-center\">\n          <CardTitle>\n            <h3 className=\"font-weight-bold\">\n              Welcome to Silicon Valley's premier dive cafe!\n            </h3>\n          </CardTitle>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default Home;\n","import axios from \"axios\";\n\nconst BASE_API_URL = \"http://localhost:5000\";\n\n/* \n  json-server will give you CRUD endpoints on snacks and drinks.\n  Here we've provided you with a single action to get all drinks.\n\n  You'll need to add to this class as you build features for the app.\n*/\n\nclass SnackOrBoozeApi {\n\n  static async getSnacks() {\n    const result = await axios.get(`${BASE_API_URL}/snacks`);\n    return result.data;\n  }\n\n  static async getDrinks() {\n    const result = await axios.get(`${BASE_API_URL}/drinks`);\n    return result.data;\n  }\n\n  static async addNewItem(newItem) {\n    console.log(`newItem is id: ${newItem.id} description: ${newItem.description} \n    serve: ${newItem.serve} recipe: ${newItem.recipe} name:${newItem.name} foodType:${newItem.foodType}`);\n    const res = await axios.post(`${BASE_API_URL}/${newItem.foodType}`, \n    { \n      id: newItem.id,\n      name: newItem.name,\n      description: newItem.description,\n      recipe: newItem.recipe,\n      serve: newItem.serve\n    });\n    return res.data;\n  }\n\n}\n\nexport default SnackOrBoozeApi;\n","import React from \"react\";\nimport \"./NavBar.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\n\nfunction NavBar() {\n  return (\n    <div>\n      <Navbar expand=\"md\">\n        <NavLink exact to=\"/\" className=\"navbar-brand\">\n          Snack or Booze\n        </NavLink>\n\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink to=\"/snacks\">Snacks</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/drinks\">Drinks</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/newItem\">Add Food</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./FoodMenu.css\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\";\n\nfunction FoodMenu({ food, foodType }) {\n  return (\n    <section className=\"col-md-4\">\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">\n            Food Menu\n          </CardTitle>\n          <CardText>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </CardText>\n          <ListGroup>\n            {food.map(f => (\n              <Link to={`/${foodType}/${f.id}`} key={f.id}>\n                <ListGroupItem>{f.name}</ListGroupItem>\n              </Link>\n            ))}\n          </ListGroup>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default FoodMenu;\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\n\nfunction FoodItem({ items, cantFind }) {\n  const { id } = useParams();\n\n  let foodItem = items.find(item => item.id === id);\n  if (!foodItem) return <Redirect to={cantFind} />;\n\n  return (\n    <section>\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">\n            {foodItem.name}\n          </CardTitle>\n          <CardText className=\"font-italic\">{foodItem.description}</CardText>\n          <p>\n            <b>Recipe:</b> {foodItem.recipe}\n          </p>\n          <p>\n            <b>Serve:</b> {foodItem.serve}\n          </p>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default FoodItem;\n","import React, {useState} from \"react\";\nimport SnackOrBoozeApi from \"./Api\";\nimport { useHistory } from \"react-router-dom\";\n\n\n//import { Card, CardBody, CardTitle } from \"reactstrap\";\n\nfunction NewItem() {\n  const history = useHistory();\n\n  const INITIAL_STATE = {\n    id: '',\n    name: '',\n    description: '',\n    recipe: '',\n    serve: ''\n  }\n  \n  const [formData, setFormData] = useState(INITIAL_STATE);\n  \n  const handleChange = (e) => {\n    const {name, value} = e.target;\n    //console.log(e.target);\n    setFormData(formData => ( {\n      ...formData,\n      [name]: value \n    } ))\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    const res = SnackOrBoozeApi.addNewItem({...formData, id:(formData.name).toLowerCase()})\n    history.push(`/${formData.foodType}`);\n    //addBox({...formData, id:uuid() });\n    setFormData(INITIAL_STATE);\n  }\n  \n  return (\n    <div>\n    <form onSubmit={handleSubmit}>\n    <label htmlFor=\"foodType\">Food Type</label>\n    <input \n      id=\"foodType\" \n      type=\"text\" \n      name=\"foodType\"\n      placeholder=\"Food Type\" \n      value={formData.foodType} \n      onChange={handleChange}\n    />\n    <label htmlFor=\"name\">Name</label>\n    <input \n      id=\"name\" \n      type=\"text\" \n      name=\"name\"\n      placeholder=\"Name\" \n      value={formData.name} \n      onChange={handleChange}\n    />\n    <label htmlFor=\"description\">Description</label>\n    <input \n      id=\"description\" \n      type=\"text\" \n      name=\"description\"\n      placeholder=\"Description\"\n      value={formData.description} \n      onChange={handleChange}\n    />\n\n    <label htmlFor=\"recipe\">Recipe</label>\n    <input \n      id=\"recipe\" \n      type=\"text\" \n      name=\"recipe\"\n      placeholder=\"recipe\"\n      value={formData.recipe} \n      onChange={handleChange}\n    />\n\n    <label htmlFor=\"serve\">Serve</label>\n    <input \n      id=\"serve\" \n      type=\"text\" \n      name=\"serve\"\n      placeholder=\"serve\"\n      value={formData.serve} \n      onChange={handleChange}\n    />\n\n    <button>Add Food Item!</button>\n  </form>\n  </div>\n  );\n}\n\nexport default NewItem;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport SnackOrBoozeApi from \"./Api\";\nimport NavBar from \"./NavBar\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Menu from \"./FoodMenu\";\nimport FoodItem from \"./FoodItem\";\nimport NewItem from \"./NewItem\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [snacks, setSnacks] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  //const [snacksAdded, setSnacksAdded] = useState(false);\n  \n\n  useEffect(() => {\n    async function getSnacks() {\n      console.log(\"useEffect get snacks\");\n      let snacks = await SnackOrBoozeApi.getSnacks();\n      setSnacks(snacks);\n      //let drinks = await SnackOrBoozeApi.getDrinks();\n      //setDrinks(drinks);\n      setIsLoading(false);\n    }\n    getSnacks();\n  }, []);\n\n\n  if (isLoading) {\n    return <p>Loading &hellip;</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar />\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home snacks={snacks} />\n            </Route>\n            <Route exact path=\"/snacks\">\n              <Menu food={snacks} foodType={\"snacks\"} title=\"Snacks\" />\n            </Route>\n            <Route path=\"/snacks/:id\">\n              <FoodItem items={snacks} cantFind=\"/snacks\" />\n            </Route>\n            <Route exact path=\"/drinks\">\n              <Menu food={drinks} foodType={\"drinks\"} title=\"Drinks\"/>\n            </Route>\n            <Route path=\"/drinks/:id\">\n              <FoodItem items={drinks} cantFind=\"/drinks\" />\n            </Route>\n            <Route path=\"/newItem\">\n              <NewItem />\n            </Route>\n            <Route>\n              <p>Hmmm. I can't seem to find what you want.</p>\n            </Route>\n          </Switch>\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// -----------\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n      \n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n//import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}